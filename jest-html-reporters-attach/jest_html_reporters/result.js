window.jest_html_reporters_callback__({"numFailedTestSuites":1,"numFailedTests":5,"numPassedTestSuites":8,"numPassedTests":112,"numPendingTestSuites":0,"numPendingTests":0,"numRuntimeErrorTestSuites":0,"numTodoTests":0,"numTotalTestSuites":9,"numTotalTests":117,"startTime":1755824614326,"success":false,"testResults":[{"numFailingTests":0,"numPassingTests":19,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1755824615016,"runtime":450,"slow":false,"start":1755824614566},"testFilePath":"C:\\Entwicklung\\mlgc\\test\\pathHelper.test.js","failureMessage":null,"testResults":[{"ancestorTitles":["pathHelper - generatePath","argument parsing"],"duration":8,"failureMessages":[],"fullName":"pathHelper - generatePath argument parsing should return basePath when no arguments provided","status":"passed","title":"should return basePath when no arguments provided"},{"ancestorTitles":["pathHelper - generatePath","argument parsing"],"duration":0,"failureMessages":[],"fullName":"pathHelper - generatePath argument parsing should return basePath when args length is 2 or less","status":"passed","title":"should return basePath when args length is 2 or less"},{"ancestorTitles":["pathHelper - generatePath","argument parsing"],"duration":1,"failureMessages":[],"fullName":"pathHelper - generatePath argument parsing should return basePath when third argument starts with '/'","status":"passed","title":"should return basePath when third argument starts with '/'"},{"ancestorTitles":["pathHelper - generatePath","argument parsing"],"duration":0,"failureMessages":[],"fullName":"pathHelper - generatePath argument parsing should join basePath with relative argument","status":"passed","title":"should join basePath with relative argument"},{"ancestorTitles":["pathHelper - generatePath","argument parsing"],"duration":1,"failureMessages":[],"fullName":"pathHelper - generatePath argument parsing should use process.cwd() as default basePath","status":"passed","title":"should use process.cwd() as default basePath"},{"ancestorTitles":["pathHelper - generatePath","edge cases"],"duration":0,"failureMessages":[],"fullName":"pathHelper - generatePath edge cases should handle empty array of arguments","status":"passed","title":"should handle empty array of arguments"},{"ancestorTitles":["pathHelper - generatePath","edge cases"],"duration":1,"failureMessages":[],"fullName":"pathHelper - generatePath edge cases should handle single dot as relative path","status":"passed","title":"should handle single dot as relative path"},{"ancestorTitles":["pathHelper - generatePath","edge cases"],"duration":0,"failureMessages":[],"fullName":"pathHelper - generatePath edge cases should handle double dot as relative path","status":"passed","title":"should handle double dot as relative path"},{"ancestorTitles":["pathHelper - generatePath","edge cases"],"duration":1,"failureMessages":[],"fullName":"pathHelper - generatePath edge cases should handle relative path with subdirectories","status":"passed","title":"should handle relative path with subdirectories"},{"ancestorTitles":["pathHelper - generatePath","edge cases"],"duration":0,"failureMessages":[],"fullName":"pathHelper - generatePath edge cases should handle Windows-style paths on Unix systems","status":"passed","title":"should handle Windows-style paths on Unix systems"},{"ancestorTitles":["pathHelper - generatePath","edge cases"],"duration":1,"failureMessages":[],"fullName":"pathHelper - generatePath edge cases should handle paths with spaces","status":"passed","title":"should handle paths with spaces"},{"ancestorTitles":["pathHelper - generatePath","edge cases"],"duration":0,"failureMessages":[],"fullName":"pathHelper - generatePath edge cases should handle empty string as third argument","status":"passed","title":"should handle empty string as third argument"},{"ancestorTitles":["pathHelper - generatePath","real-world scenarios"],"duration":0,"failureMessages":[],"fullName":"pathHelper - generatePath real-world scenarios should work with typical npm run start arguments","status":"passed","title":"should work with typical npm run start arguments"},{"ancestorTitles":["pathHelper - generatePath","real-world scenarios"],"duration":1,"failureMessages":[],"fullName":"pathHelper - generatePath real-world scenarios should work with npx global execution","status":"passed","title":"should work with npx global execution"},{"ancestorTitles":["pathHelper - generatePath","real-world scenarios"],"duration":0,"failureMessages":[],"fullName":"pathHelper - generatePath real-world scenarios should work with local project execution with path","status":"passed","title":"should work with local project execution with path"},{"ancestorTitles":["pathHelper - generatePath","real-world scenarios"],"duration":0,"failureMessages":[],"fullName":"pathHelper - generatePath real-world scenarios should handle absolute paths correctly (Unix)","status":"passed","title":"should handle absolute paths correctly (Unix)"},{"ancestorTitles":["pathHelper - generatePath","real-world scenarios"],"duration":0,"failureMessages":[],"fullName":"pathHelper - generatePath real-world scenarios should work with different base paths","status":"passed","title":"should work with different base paths"},{"ancestorTitles":["pathHelper - generatePath","cross-platform compatibility"],"duration":0,"failureMessages":[],"fullName":"pathHelper - generatePath cross-platform compatibility should use path.join for proper separator handling","status":"passed","title":"should use path.join for proper separator handling"},{"ancestorTitles":["pathHelper - generatePath","cross-platform compatibility"],"duration":1,"failureMessages":[],"fullName":"pathHelper - generatePath cross-platform compatibility should handle backslash in path on all platforms","status":"passed","title":"should handle backslash in path on all platforms"}]},{"numFailingTests":0,"numPassingTests":5,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1755824615017,"runtime":450,"slow":false,"start":1755824614567},"testFilePath":"C:\\Entwicklung\\mlgc\\test\\cli-index.test.js","failureMessage":null,"testResults":[{"ancestorTitles":["CLI Entry Point (index.js)"],"duration":9,"failureMessages":[],"fullName":"CLI Entry Point (index.js) should call showWelcome and showMenu in correct order","status":"passed","title":"should call showWelcome and showMenu in correct order"},{"ancestorTitles":["CLI Entry Point (index.js)"],"duration":1,"failureMessages":[],"fullName":"CLI Entry Point (index.js) should work with no command line arguments","status":"passed","title":"should work with no command line arguments"},{"ancestorTitles":["CLI Entry Point (index.js)"],"duration":1,"failureMessages":[],"fullName":"CLI Entry Point (index.js) should work with command line arguments","status":"passed","title":"should work with command line arguments"},{"ancestorTitles":["CLI Entry Point (index.js)"],"duration":1,"failureMessages":[],"fullName":"CLI Entry Point (index.js) should not throw errors during module initialization","status":"passed","title":"should not throw errors during module initialization"},{"ancestorTitles":["CLI Entry Point (index.js)"],"duration":1,"failureMessages":[],"fullName":"CLI Entry Point (index.js) should call both functions without parameters","status":"passed","title":"should call both functions without parameters"}]},{"numFailingTests":0,"numPassingTests":10,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1755824615023,"runtime":456,"slow":false,"start":1755824614567},"testFilePath":"C:\\Entwicklung\\mlgc\\test\\logger.test.js","failureMessage":null,"testResults":[{"ancestorTitles":["Logger utility","log.success"],"duration":7,"failureMessages":[],"fullName":"Logger utility log.success should log a message with the SUCCESS tag in green","status":"passed","title":"should log a message with the SUCCESS tag in green"},{"ancestorTitles":["Logger utility","log.success"],"duration":0,"failureMessages":[],"fullName":"Logger utility log.success should handle empty messages gracefully","status":"passed","title":"should handle empty messages gracefully"},{"ancestorTitles":["Logger utility","log.info"],"duration":1,"failureMessages":[],"fullName":"Logger utility log.info should log a message with the INFO tag in cyan","status":"passed","title":"should log a message with the INFO tag in cyan"},{"ancestorTitles":["Logger utility","log.info"],"duration":0,"failureMessages":[],"fullName":"Logger utility log.info should handle special characters in the message","status":"passed","title":"should handle special characters in the message"},{"ancestorTitles":["Logger utility","log.warn"],"duration":1,"failureMessages":[],"fullName":"Logger utility log.warn should log a message with the WARN tag in yellow","status":"passed","title":"should log a message with the WARN tag in yellow"},{"ancestorTitles":["Logger utility","log.warn"],"duration":0,"failureMessages":[],"fullName":"Logger utility log.warn should handle undefined messages gracefully","status":"passed","title":"should handle undefined messages gracefully"},{"ancestorTitles":["Logger utility","log.error"],"duration":0,"failureMessages":[],"fullName":"Logger utility log.error should log a message with the ERROR tag in red","status":"passed","title":"should log a message with the ERROR tag in red"},{"ancestorTitles":["Logger utility","log.error"],"duration":1,"failureMessages":[],"fullName":"Logger utility log.error should handle numbers as messages","status":"passed","title":"should handle numbers as messages"},{"ancestorTitles":["Logger utility","General logging behavior"],"duration":0,"failureMessages":[],"fullName":"Logger utility General logging behavior should not throw errors when logging undefined messages","status":"passed","title":"should not throw errors when logging undefined messages"},{"ancestorTitles":["Logger utility","General logging behavior"],"duration":1,"failureMessages":[],"fullName":"Logger utility General logging behavior should format messages consistently across all methods","status":"passed","title":"should format messages consistently across all methods"}]},{"numFailingTests":0,"numPassingTests":15,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1755824615044,"runtime":478,"slow":false,"start":1755824614566},"testFilePath":"C:\\Entwicklung\\mlgc\\test\\welcome.test.js","failureMessage":null,"testResults":[{"ancestorTitles":["showWelcome"],"duration":9,"failureMessages":[],"fullName":"showWelcome should call console.log with boxen output","status":"passed","title":"should call console.log with boxen output"},{"ancestorTitles":["showWelcome"],"duration":1,"failureMessages":[],"fullName":"showWelcome should call boxen with correct message structure","status":"passed","title":"should call boxen with correct message structure"},{"ancestorTitles":["showWelcome"],"duration":1,"failureMessages":[],"fullName":"showWelcome should call boxen with correct options","status":"passed","title":"should call boxen with correct options"},{"ancestorTitles":["showWelcome"],"duration":1,"failureMessages":[],"fullName":"showWelcome should use chalk.yellow.bold for the welcome title","status":"passed","title":"should use chalk.yellow.bold for the welcome title"},{"ancestorTitles":["showWelcome"],"duration":0,"failureMessages":[],"fullName":"showWelcome should include emoji in the welcome message","status":"passed","title":"should include emoji in the welcome message"},{"ancestorTitles":["showWelcome"],"duration":1,"failureMessages":[],"fullName":"showWelcome should include program description","status":"passed","title":"should include program description"},{"ancestorTitles":["showWelcome"],"duration":0,"failureMessages":[],"fullName":"showWelcome should not throw any errors","status":"passed","title":"should not throw any errors"},{"ancestorTitles":["showWelcome"],"duration":1,"failureMessages":[],"fullName":"showWelcome should call functions in correct order","status":"passed","title":"should call functions in correct order"},{"ancestorTitles":["showWelcome"],"duration":0,"failureMessages":[],"fullName":"showWelcome should format message with proper whitespace","status":"passed","title":"should format message with proper whitespace"},{"ancestorTitles":["showWelcome","boxen configuration"],"duration":2,"failureMessages":[],"fullName":"showWelcome boxen configuration should use round border style","status":"passed","title":"should use round border style"},{"ancestorTitles":["showWelcome","boxen configuration"],"duration":1,"failureMessages":[],"fullName":"showWelcome boxen configuration should use yellow border color","status":"passed","title":"should use yellow border color"},{"ancestorTitles":["showWelcome","boxen configuration"],"duration":0,"failureMessages":[],"fullName":"showWelcome boxen configuration should use padding of 1","status":"passed","title":"should use padding of 1"},{"ancestorTitles":["showWelcome","boxen configuration"],"duration":0,"failureMessages":[],"fullName":"showWelcome boxen configuration should use margin of 1","status":"passed","title":"should use margin of 1"},{"ancestorTitles":["showWelcome","message content verification"],"duration":1,"failureMessages":[],"fullName":"showWelcome message content verification should contain all required text elements","status":"passed","title":"should contain all required text elements"},{"ancestorTitles":["showWelcome","message content verification"],"duration":1,"failureMessages":[],"fullName":"showWelcome message content verification should not contain any undefined or null values","status":"passed","title":"should not contain any undefined or null values"}]},{"numFailingTests":0,"numPassingTests":11,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1755824615056,"runtime":487,"slow":false,"start":1755824614569},"testFilePath":"C:\\Entwicklung\\mlgc\\test\\git.test.js","failureMessage":null,"testResults":[{"ancestorTitles":["gitCommand","getIgnoredFiles"],"duration":6,"failureMessages":[],"fullName":"gitCommand getIgnoredFiles should generate grep commands for ignored files","status":"passed","title":"should generate grep commands for ignored files"},{"ancestorTitles":["gitCommand","gitCommand function"],"duration":1,"failureMessages":[],"fullName":"gitCommand gitCommand function should generate a git command for branch mode","status":"passed","title":"should generate a git command for branch mode"},{"ancestorTitles":["gitCommand","gitCommand function"],"duration":1,"failureMessages":[],"fullName":"gitCommand gitCommand function should generate a git command for commit mode","status":"passed","title":"should generate a git command for commit mode"},{"ancestorTitles":["gitCommand","gitCommand function"],"duration":0,"failureMessages":[],"fullName":"gitCommand gitCommand function should include ignored files in the command","status":"passed","title":"should include ignored files in the command"},{"ancestorTitles":["gitCommand","getMainBranch function"],"duration":0,"failureMessages":[],"fullName":"gitCommand getMainBranch function should return the main branch name from git output","status":"passed","title":"should return the main branch name from git output"},{"ancestorTitles":["gitCommand","getMainBranch function"],"duration":41,"failureMessages":[],"fullName":"gitCommand getMainBranch function should return master as a fallback if git command fails","status":"passed","title":"should return master as a fallback if git command fails"},{"ancestorTitles":["gitCommand","getMainBranch function"],"duration":1,"failureMessages":[],"fullName":"gitCommand getMainBranch function should handle unexpected git output gracefully","status":"passed","title":"should handle unexpected git output gracefully"},{"ancestorTitles":["gitCommand","getMainBranch function"],"duration":1,"failureMessages":[],"fullName":"gitCommand getMainBranch function should log an error message if the command fails","status":"passed","title":"should log an error message if the command fails"},{"ancestorTitles":["gitCommand","Integration tests"],"duration":0,"failureMessages":[],"fullName":"gitCommand Integration tests should generate a complete git command for branch mode","status":"passed","title":"should generate a complete git command for branch mode"},{"ancestorTitles":["gitCommand","Integration tests"],"duration":0,"failureMessages":[],"fullName":"gitCommand Integration tests should generate a complete git command for commit mode","status":"passed","title":"should generate a complete git command for commit mode"},{"ancestorTitles":["gitCommand"],"duration":0,"failureMessages":[],"fullName":"gitCommand should not break if settings object is missing","status":"passed","title":"should not break if settings object is missing"}]},{"numFailingTests":5,"numPassingTests":11,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1755824615173,"runtime":608,"slow":false,"start":1755824614565},"testFilePath":"C:\\Entwicklung\\mlgc\\test\\fileHelper.test.js","failureMessage":"\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mFileHelpers › copyFile › should copy a file to the destination\u001b[39m\u001b[22m\n\n    Invalid path\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 3 |\u001b[39m \u001b[36masync\u001b[39m \u001b[36mfunction\u001b[39m validatePath(path) {\u001b[22m\n\u001b[2m     \u001b[90m 4 |\u001b[39m   \u001b[36mif\u001b[39m (\u001b[33m!\u001b[39mpath) {\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 5 |\u001b[39m     \u001b[36mthrow\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mError\u001b[39m(\u001b[32m\"Invalid path\"\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m   |\u001b[39m           \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 6 |\u001b[39m   }\u001b[22m\n\u001b[2m     \u001b[90m 7 |\u001b[39m }\u001b[22m\n\u001b[2m     \u001b[90m 8 |\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat validatePath (\u001b[22m\u001b[2msrc/helpers/fileHelper.js\u001b[2m:5:11)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat validatePath (\u001b[22m\u001b[2msrc/helpers/fileHelper.js\u001b[2m:10:9)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat createFolder (\u001b[22m\u001b[2msrc/helpers/fileHelper.js\u001b[2m:44:11)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[2m\u001b[0m\u001b[36mtest/fileHelper.test.js\u001b[39m\u001b[0m\u001b[2m:77:7)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mFileHelpers › copyFile › should create the destination folder if it does not exist\u001b[39m\u001b[22m\n\n    Invalid path\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 3 |\u001b[39m \u001b[36masync\u001b[39m \u001b[36mfunction\u001b[39m validatePath(path) {\u001b[22m\n\u001b[2m     \u001b[90m 4 |\u001b[39m   \u001b[36mif\u001b[39m (\u001b[33m!\u001b[39mpath) {\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 5 |\u001b[39m     \u001b[36mthrow\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mError\u001b[39m(\u001b[32m\"Invalid path\"\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m   |\u001b[39m           \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 6 |\u001b[39m   }\u001b[22m\n\u001b[2m     \u001b[90m 7 |\u001b[39m }\u001b[22m\n\u001b[2m     \u001b[90m 8 |\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat validatePath (\u001b[22m\u001b[2msrc/helpers/fileHelper.js\u001b[2m:5:11)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat validatePath (\u001b[22m\u001b[2msrc/helpers/fileHelper.js\u001b[2m:10:9)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat createFolder (\u001b[22m\u001b[2msrc/helpers/fileHelper.js\u001b[2m:44:11)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[2m\u001b[0m\u001b[36mtest/fileHelper.test.js\u001b[39m\u001b[0m\u001b[2m:88:7)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mFileHelpers › copyFile › should throw an error if source file is missing\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mrejects\u001b[2m.\u001b[22mtoThrow\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m)\u001b[22m\n\n    Expected substring: \u001b[32m\"Failed to copy file: Source file not found\"\u001b[39m\n    Received message:   \u001b[31m\"Invalid path\"\u001b[39m\n\n        \u001b[0m \u001b[90m 3 |\u001b[39m \u001b[36masync\u001b[39m \u001b[36mfunction\u001b[39m validatePath(path) {\n         \u001b[90m 4 |\u001b[39m   \u001b[36mif\u001b[39m (\u001b[33m!\u001b[39mpath) {\n        \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 5 |\u001b[39m     \u001b[36mthrow\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mError\u001b[39m(\u001b[32m\"Invalid path\"\u001b[39m)\u001b[33m;\u001b[39m\n         \u001b[90m   |\u001b[39m           \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n         \u001b[90m 6 |\u001b[39m   }\n         \u001b[90m 7 |\u001b[39m }\n         \u001b[90m 8 |\u001b[39m\u001b[0m\n\n          \u001b[2mat validatePath (\u001b[22msrc/helpers/fileHelper.js\u001b[2m:5:11)\u001b[22m\n          \u001b[2mat validatePath (\u001b[22msrc/helpers/fileHelper.js\u001b[2m:10:9)\u001b[22m\n          \u001b[2mat createFolder (\u001b[22msrc/helpers/fileHelper.js\u001b[2m:44:11)\u001b[22m\n          \u001b[2mat Object.<anonymous> (\u001b[22mtest/fileHelper.test.js\u001b[2m:96:7)\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m  96 |\u001b[39m       \u001b[36mawait\u001b[39m expect(\u001b[22m\n\u001b[2m     \u001b[90m  97 |\u001b[39m         copyFile(\u001b[32m\"/missing/file.txt\"\u001b[39m\u001b[33m,\u001b[39m \u001b[32m\"/destination/file.txt\"\u001b[39m)\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m  98 |\u001b[39m       )\u001b[33m.\u001b[39mrejects\u001b[33m.\u001b[39mtoThrow(\u001b[32m\"Failed to copy file: Source file not found\"\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m     |\u001b[39m                 \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m  99 |\u001b[39m     })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 100 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 101 |\u001b[39m     it(\u001b[32m\"should throw an error if destination path is invalid\"\u001b[39m\u001b[33m,\u001b[39m \u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.toThrow (\u001b[22m\u001b[2mnode_modules/expect/build/index.js\u001b[2m:218:22)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.toThrow (\u001b[22m\u001b[2m\u001b[0m\u001b[36mtest/fileHelper.test.js\u001b[39m\u001b[0m\u001b[2m:98:17)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mFileHelpers › copyFile › should handle complex destination paths correctly\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mjest.fn()\u001b[39m\u001b[2m).\u001b[22mtoHaveBeenCalledWith\u001b[2m(\u001b[22m\u001b[32m...expected\u001b[39m\u001b[2m)\u001b[22m\n\n    \u001b[32m- Expected\u001b[39m\n    \u001b[31m+ Received\u001b[39m\n\n    \u001b[32m- \"/nested/folder/destination\"\u001b[39m,\n    \u001b[31m+ \"/nested/folder\"\u001b[39m,\n      \u001b[2m{\"recursive\": true}\u001b[22m,\n\n    Number of calls: \u001b[31m1\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 110 |\u001b[39m       fs\u001b[33m.\u001b[39mcopyFile\u001b[33m.\u001b[39mmockResolvedValue()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 111 |\u001b[39m       \u001b[36mawait\u001b[39m copyFile(\u001b[32m\"/source/file.txt\"\u001b[39m\u001b[33m,\u001b[39m \u001b[32m\"/nested/folder/destination/file.txt\"\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 112 |\u001b[39m       expect(fs\u001b[33m.\u001b[39mmkdir)\u001b[33m.\u001b[39mtoHaveBeenCalledWith(\u001b[32m\"/nested/folder/destination\"\u001b[39m\u001b[33m,\u001b[39m {\u001b[22m\n\u001b[2m     \u001b[90m     |\u001b[39m                        \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 113 |\u001b[39m         recursive\u001b[33m:\u001b[39m \u001b[36mtrue\u001b[39m\u001b[33m,\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 114 |\u001b[39m       })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 115 |\u001b[39m     })\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.toHaveBeenCalledWith (\u001b[22m\u001b[2m\u001b[0m\u001b[36mtest/fileHelper.test.js\u001b[39m\u001b[0m\u001b[2m:112:24)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mFileHelpers › Integration tests › should copy a file and ensure the destination folder exists\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mjest.fn()\u001b[39m\u001b[2m).\u001b[22mtoHaveBeenCalledWith\u001b[2m(\u001b[22m\u001b[32m...expected\u001b[39m\u001b[2m)\u001b[22m\n\n    \u001b[32m- Expected\u001b[39m\n    \u001b[31m+ Received\u001b[39m\n\n    \u001b[32m- \"/destination/folder\"\u001b[39m,\n    \u001b[31m+ \"/destination\"\u001b[39m,\n      \u001b[2m{\"recursive\": true}\u001b[22m,\n\n    Number of calls: \u001b[31m1\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 145 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 146 |\u001b[39m       \u001b[36mawait\u001b[39m copyFile(\u001b[32m\"/source/file.txt\"\u001b[39m\u001b[33m,\u001b[39m \u001b[32m\"/destination/folder/file.txt\"\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 147 |\u001b[39m       expect(fs\u001b[33m.\u001b[39mmkdir)\u001b[33m.\u001b[39mtoHaveBeenCalledWith(\u001b[32m\"/destination/folder\"\u001b[39m\u001b[33m,\u001b[39m {\u001b[22m\n\u001b[2m     \u001b[90m     |\u001b[39m                        \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 148 |\u001b[39m         recursive\u001b[33m:\u001b[39m \u001b[36mtrue\u001b[39m\u001b[33m,\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 149 |\u001b[39m       })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 150 |\u001b[39m       expect(fs\u001b[33m.\u001b[39mcopyFile)\u001b[33m.\u001b[39mtoHaveBeenCalledWith(\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.toHaveBeenCalledWith (\u001b[22m\u001b[2m\u001b[0m\u001b[36mtest/fileHelper.test.js\u001b[39m\u001b[0m\u001b[2m:147:24)\u001b[22m\u001b[2m\u001b[22m\n","testResults":[{"ancestorTitles":["FileHelpers","createFolder"],"duration":6,"failureMessages":[],"fullName":"FileHelpers createFolder should create a folder when a valid path is provided","status":"passed","title":"should create a folder when a valid path is provided"},{"ancestorTitles":["FileHelpers","folderExists"],"duration":1,"failureMessages":[],"fullName":"FileHelpers folderExists should return true if the folder exists","status":"passed","title":"should return true if the folder exists"},{"ancestorTitles":["FileHelpers","folderExists"],"duration":0,"failureMessages":[],"fullName":"FileHelpers folderExists should return false if the folder does not exist","status":"passed","title":"should return false if the folder does not exist"},{"ancestorTitles":["FileHelpers","removeFolder"],"duration":1,"failureMessages":[],"fullName":"FileHelpers removeFolder should remove a folder if it exists","status":"passed","title":"should remove a folder if it exists"},{"ancestorTitles":["FileHelpers","removeFolder"],"duration":0,"failureMessages":[],"fullName":"FileHelpers removeFolder should not call rm if the folder does not exist","status":"passed","title":"should not call rm if the folder does not exist"},{"ancestorTitles":["FileHelpers","removeFolder"],"duration":7,"failureMessages":[],"fullName":"FileHelpers removeFolder should throw an error if path is invalid","status":"passed","title":"should throw an error if path is invalid"},{"ancestorTitles":["FileHelpers","removeFolder"],"duration":0,"failureMessages":[],"fullName":"FileHelpers removeFolder should throw an error if rm fails","status":"passed","title":"should throw an error if rm fails"},{"ancestorTitles":["FileHelpers","copyFile"],"duration":1,"failureMessages":["Error: Invalid path\n    at validatePath (C:\\Entwicklung\\mlgc\\src\\helpers\\fileHelper.js:5:11)\n    at validatePath (C:\\Entwicklung\\mlgc\\src\\helpers\\fileHelper.js:10:9)\n    at createFolder (C:\\Entwicklung\\mlgc\\src\\helpers\\fileHelper.js:44:11)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at Object.<anonymous> (C:\\Entwicklung\\mlgc\\test\\fileHelper.test.js:77:7)"],"fullName":"FileHelpers copyFile should copy a file to the destination","status":"failed","title":"should copy a file to the destination"},{"ancestorTitles":["FileHelpers","copyFile"],"duration":0,"failureMessages":["Error: Invalid path\n    at validatePath (C:\\Entwicklung\\mlgc\\src\\helpers\\fileHelper.js:5:11)\n    at validatePath (C:\\Entwicklung\\mlgc\\src\\helpers\\fileHelper.js:10:9)\n    at createFolder (C:\\Entwicklung\\mlgc\\src\\helpers\\fileHelper.js:44:11)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at Object.<anonymous> (C:\\Entwicklung\\mlgc\\test\\fileHelper.test.js:88:7)"],"fullName":"FileHelpers copyFile should create the destination folder if it does not exist","status":"failed","title":"should create the destination folder if it does not exist"},{"ancestorTitles":["FileHelpers","copyFile"],"duration":9,"failureMessages":["Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mrejects\u001b[2m.\u001b[22mtoThrow\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m)\u001b[22m\n\nExpected substring: \u001b[32m\"Failed to copy file: Source file not found\"\u001b[39m\nReceived message:   \u001b[31m\"Invalid path\"\u001b[39m\n\n    \u001b[0m \u001b[90m 3 |\u001b[39m \u001b[36masync\u001b[39m \u001b[36mfunction\u001b[39m validatePath(path) {\n     \u001b[90m 4 |\u001b[39m   \u001b[36mif\u001b[39m (\u001b[33m!\u001b[39mpath) {\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 5 |\u001b[39m     \u001b[36mthrow\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mError\u001b[39m(\u001b[32m\"Invalid path\"\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m   |\u001b[39m           \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 6 |\u001b[39m   }\n     \u001b[90m 7 |\u001b[39m }\n     \u001b[90m 8 |\u001b[39m\u001b[0m\n\n      \u001b[2mat validatePath (\u001b[22msrc/helpers/fileHelper.js\u001b[2m:5:11)\u001b[22m\n      \u001b[2mat validatePath (\u001b[22msrc/helpers/fileHelper.js\u001b[2m:10:9)\u001b[22m\n      \u001b[2mat createFolder (\u001b[22msrc/helpers/fileHelper.js\u001b[2m:44:11)\u001b[22m\n      \u001b[2mat Object.<anonymous> (\u001b[22mtest/fileHelper.test.js\u001b[2m:96:7)\u001b[22m\n    at Object.toThrow (C:\\Entwicklung\\mlgc\\node_modules\\expect\\build\\index.js:218:22)\n    at Object.toThrow (C:\\Entwicklung\\mlgc\\test\\fileHelper.test.js:98:17)\n    at Promise.then.completed (C:\\Entwicklung\\mlgc\\node_modules\\jest-circus\\build\\utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (C:\\Entwicklung\\mlgc\\node_modules\\jest-circus\\build\\utils.js:231:10)\n    at _callCircusTest (C:\\Entwicklung\\mlgc\\node_modules\\jest-circus\\build\\run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at _runTest (C:\\Entwicklung\\mlgc\\node_modules\\jest-circus\\build\\run.js:252:3)\n    at _runTestsForDescribeBlock (C:\\Entwicklung\\mlgc\\node_modules\\jest-circus\\build\\run.js:126:9)\n    at _runTestsForDescribeBlock (C:\\Entwicklung\\mlgc\\node_modules\\jest-circus\\build\\run.js:121:9)\n    at _runTestsForDescribeBlock (C:\\Entwicklung\\mlgc\\node_modules\\jest-circus\\build\\run.js:121:9)\n    at run (C:\\Entwicklung\\mlgc\\node_modules\\jest-circus\\build\\run.js:71:3)\n    at runAndTransformResultsToJestFormat (C:\\Entwicklung\\mlgc\\node_modules\\jest-circus\\build\\legacy-code-todo-rewrite\\jestAdapterInit.js:122:21)\n    at jestAdapter (C:\\Entwicklung\\mlgc\\node_modules\\jest-circus\\build\\legacy-code-todo-rewrite\\jestAdapter.js:79:19)\n    at runTestInternal (C:\\Entwicklung\\mlgc\\node_modules\\jest-runner\\build\\runTest.js:367:16)\n    at runTest (C:\\Entwicklung\\mlgc\\node_modules\\jest-runner\\build\\runTest.js:444:34)\n    at Object.worker (C:\\Entwicklung\\mlgc\\node_modules\\jest-runner\\build\\testWorker.js:106:12)"],"fullName":"FileHelpers copyFile should throw an error if source file is missing","status":"failed","title":"should throw an error if source file is missing"},{"ancestorTitles":["FileHelpers","copyFile"],"duration":0,"failureMessages":[],"fullName":"FileHelpers copyFile should throw an error if destination path is invalid","status":"passed","title":"should throw an error if destination path is invalid"},{"ancestorTitles":["FileHelpers","copyFile"],"duration":4,"failureMessages":["Error: \u001b[2mexpect(\u001b[22m\u001b[31mjest.fn()\u001b[39m\u001b[2m).\u001b[22mtoHaveBeenCalledWith\u001b[2m(\u001b[22m\u001b[32m...expected\u001b[39m\u001b[2m)\u001b[22m\n\n\u001b[32m- Expected\u001b[39m\n\u001b[31m+ Received\u001b[39m\n\n\u001b[32m- \"/nested/folder/destination\"\u001b[39m,\n\u001b[31m+ \"/nested/folder\"\u001b[39m,\n  \u001b[2m{\"recursive\": true}\u001b[22m,\n\nNumber of calls: \u001b[31m1\u001b[39m\n    at Object.toHaveBeenCalledWith (C:\\Entwicklung\\mlgc\\test\\fileHelper.test.js:112:24)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)"],"fullName":"FileHelpers copyFile should handle complex destination paths correctly","status":"failed","title":"should handle complex destination paths correctly"},{"ancestorTitles":["FileHelpers","General error handling"],"duration":0,"failureMessages":[],"fullName":"FileHelpers General error handling should handle empty path validation for createFolder","status":"passed","title":"should handle empty path validation for createFolder"},{"ancestorTitles":["FileHelpers","General error handling"],"duration":1,"failureMessages":[],"fullName":"FileHelpers General error handling should handle empty path validation for removeFolder","status":"passed","title":"should handle empty path validation for removeFolder"},{"ancestorTitles":["FileHelpers","Integration tests"],"duration":0,"failureMessages":[],"fullName":"FileHelpers Integration tests should create, check, and remove a folder successfully","status":"passed","title":"should create, check, and remove a folder successfully"},{"ancestorTitles":["FileHelpers","Integration tests"],"duration":1,"failureMessages":["Error: \u001b[2mexpect(\u001b[22m\u001b[31mjest.fn()\u001b[39m\u001b[2m).\u001b[22mtoHaveBeenCalledWith\u001b[2m(\u001b[22m\u001b[32m...expected\u001b[39m\u001b[2m)\u001b[22m\n\n\u001b[32m- Expected\u001b[39m\n\u001b[31m+ Received\u001b[39m\n\n\u001b[32m- \"/destination/folder\"\u001b[39m,\n\u001b[31m+ \"/destination\"\u001b[39m,\n  \u001b[2m{\"recursive\": true}\u001b[22m,\n\nNumber of calls: \u001b[31m1\u001b[39m\n    at Object.toHaveBeenCalledWith (C:\\Entwicklung\\mlgc\\test\\fileHelper.test.js:147:24)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)"],"fullName":"FileHelpers Integration tests should copy a file and ensure the destination folder exists","status":"failed","title":"should copy a file and ensure the destination folder exists"}]},{"numFailingTests":0,"numPassingTests":10,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1755824615222,"runtime":657,"slow":false,"start":1755824614565},"testFilePath":"C:\\Entwicklung\\mlgc\\test\\copy.test.js","failureMessage":null,"testResults":[{"ancestorTitles":["copy function"],"duration":30,"failureMessages":[],"fullName":"copy function should change the directory to the given path","status":"passed","title":"should change the directory to the given path"},{"ancestorTitles":["copy function"],"duration":2,"failureMessages":[],"fullName":"copy function should log information if no changes are found","status":"passed","title":"should log information if no changes are found"},{"ancestorTitles":["copy function"],"duration":4,"failureMessages":[],"fullName":"copy function should copy each file to the correct folder","status":"passed","title":"should copy each file to the correct folder"},{"ancestorTitles":["copy function"],"duration":3,"failureMessages":[],"fullName":"copy function should log success message after copying files","status":"passed","title":"should log success message after copying files"},{"ancestorTitles":["copy function","copy function tests"],"duration":1,"failureMessages":[],"fullName":"copy function copy function tests should handle git command error gracefully","status":"passed","title":"should handle git command error gracefully"},{"ancestorTitles":["copy function","copy function tests"],"duration":2,"failureMessages":[],"fullName":"copy function copy function tests should copy files to the correct upload folder","status":"passed","title":"should copy files to the correct upload folder"},{"ancestorTitles":["copy function","copy function tests"],"duration":2,"failureMessages":[],"fullName":"copy function copy function tests should handle individual file copy failures","status":"passed","title":"should handle individual file copy failures"},{"ancestorTitles":["copy function","copy function tests"],"duration":2,"failureMessages":[],"fullName":"copy function copy function tests should filter out empty file names","status":"passed","title":"should filter out empty file names"},{"ancestorTitles":["copy function","copy function tests"],"duration":3,"failureMessages":[],"fullName":"copy function copy function tests should display correct boxen output for copied files","status":"passed","title":"should display correct boxen output for copied files"},{"ancestorTitles":["copy function"],"duration":1,"failureMessages":[],"fullName":"copy function should not copy any files if the list is empty","status":"passed","title":"should not copy any files if the list is empty"}]},{"numFailingTests":0,"numPassingTests":20,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1755824615233,"runtime":665,"slow":false,"start":1755824614568},"testFilePath":"C:\\Entwicklung\\mlgc\\test\\menu.test.js","failureMessage":null,"testResults":[{"ancestorTitles":["showMenu function"],"duration":5,"failureMessages":[],"fullName":"showMenu function should call generatePath with process.argv","status":"passed","title":"should call generatePath with process.argv"},{"ancestorTitles":["showMenu function"],"duration":1,"failureMessages":[],"fullName":"showMenu function should log info for copying current changes","status":"passed","title":"should log info for copying current changes"},{"ancestorTitles":["showMenu function"],"duration":0,"failureMessages":[],"fullName":"showMenu function should log info for copying changes from main branch","status":"passed","title":"should log info for copying changes from main branch"},{"ancestorTitles":["showMenu function"],"duration":1,"failureMessages":[],"fullName":"showMenu function should clear copy folder and log success","status":"passed","title":"should clear copy folder and log success"},{"ancestorTitles":["showMenu function"],"duration":0,"failureMessages":[],"fullName":"showMenu function should create Select prompt with correct name","status":"passed","title":"should create Select prompt with correct name"},{"ancestorTitles":["showMenu function"],"duration":0,"failureMessages":[],"fullName":"showMenu function should have exactly 3 menu choices","status":"passed","title":"should have exactly 3 menu choices"},{"ancestorTitles":["showMenu function"],"duration":0,"failureMessages":[],"fullName":"showMenu function should have correct prompt message","status":"passed","title":"should have correct prompt message"},{"ancestorTitles":["showMenu function"],"duration":0,"failureMessages":[],"fullName":"showMenu function should pass the generated path to copy for current changes","status":"passed","title":"should pass the generated path to copy for current changes"},{"ancestorTitles":["showMenu function"],"duration":0,"failureMessages":[],"fullName":"showMenu function should pass the generated path to copy for main branch changes","status":"passed","title":"should pass the generated path to copy for main branch changes"},{"ancestorTitles":["showMenu function"],"duration":0,"failureMessages":[],"fullName":"showMenu function should not call copy or clearCopyFolder for unrecognized selection","status":"passed","title":"should not call copy or clearCopyFolder for unrecognized selection"},{"ancestorTitles":["showMenu function"],"duration":0,"failureMessages":[],"fullName":"showMenu function should call generatePath only once per menu interaction","status":"passed","title":"should call generatePath only once per menu interaction"},{"ancestorTitles":["showMenu function"],"duration":0,"failureMessages":[],"fullName":"showMenu function should use process.argv when generating path","status":"passed","title":"should use process.argv when generating path"},{"ancestorTitles":["showMenu function","error handling"],"duration":1,"failureMessages":[],"fullName":"showMenu function error handling should handle Select promise rejection","status":"passed","title":"should handle Select promise rejection"},{"ancestorTitles":["showMenu function","error handling"],"duration":8,"failureMessages":[],"fullName":"showMenu function error handling should handle enquirer initialization errors","status":"passed","title":"should handle enquirer initialization errors"},{"ancestorTitles":["showMenu function","error handling"],"duration":0,"failureMessages":[],"fullName":"showMenu function error handling should not crash on copy function errors","status":"passed","title":"should not crash on copy function errors"},{"ancestorTitles":["showMenu function","error handling"],"duration":1,"failureMessages":[],"fullName":"showMenu function error handling should not crash on clearCopyFolder errors","status":"passed","title":"should not crash on clearCopyFolder errors"},{"ancestorTitles":["showMenu function","error handling"],"duration":0,"failureMessages":[],"fullName":"showMenu function error handling should handle generatePath errors","status":"passed","title":"should handle generatePath errors"},{"ancestorTitles":["showMenu function","error handling"],"duration":1,"failureMessages":[],"fullName":"showMenu function error handling should call console.error for Select rejection with correct error object","status":"passed","title":"should call console.error for Select rejection with correct error object"},{"ancestorTitles":["showMenu function","async behavior"],"duration":17,"failureMessages":[],"fullName":"showMenu function async behavior should wait for Select promise to resolve before proceeding","status":"passed","title":"should wait for Select promise to resolve before proceeding"},{"ancestorTitles":["showMenu function","async behavior"],"duration":3,"failureMessages":[],"fullName":"showMenu function async behavior should handle concurrent menu calls","status":"passed","title":"should handle concurrent menu calls"}]},{"numFailingTests":0,"numPassingTests":11,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1755824618151,"runtime":3585,"slow":false,"start":1755824614566},"testFilePath":"C:\\Entwicklung\\mlgc\\test\\cli-integration.test.js","failureMessage":null,"testResults":[{"ancestorTitles":["CLI Integration Tests","CLI execution"],"duration":1022,"failureMessages":[],"fullName":"CLI Integration Tests CLI execution should start without errors when run directly","status":"passed","title":"should start without errors when run directly"},{"ancestorTitles":["CLI Integration Tests","CLI execution"],"duration":1020,"failureMessages":[],"fullName":"CLI Integration Tests CLI execution should handle command line arguments","status":"passed","title":"should handle command line arguments"},{"ancestorTitles":["CLI Integration Tests","module loading"],"duration":91,"failureMessages":[],"fullName":"CLI Integration Tests module loading should load all required modules without errors","status":"passed","title":"should load all required modules without errors"},{"ancestorTitles":["CLI Integration Tests","module loading"],"duration":2,"failureMessages":[],"fullName":"CLI Integration Tests module loading should have all dependencies available","status":"passed","title":"should have all dependencies available"},{"ancestorTitles":["CLI Integration Tests","file system requirements"],"duration":1,"failureMessages":[],"fullName":"CLI Integration Tests file system requirements should have executable entry point","status":"passed","title":"should have executable entry point"},{"ancestorTitles":["CLI Integration Tests","file system requirements"],"duration":0,"failureMessages":[],"fullName":"CLI Integration Tests file system requirements should have shebang for Unix systems","status":"passed","title":"should have shebang for Unix systems"},{"ancestorTitles":["CLI Integration Tests","file system requirements"],"duration":0,"failureMessages":[],"fullName":"CLI Integration Tests file system requirements should be in the correct location specified in package.json","status":"passed","title":"should be in the correct location specified in package.json"},{"ancestorTitles":["CLI Integration Tests","environment compatibility"],"duration":1,"failureMessages":[],"fullName":"CLI Integration Tests environment compatibility should work with different Node.js versions (>=14.0.0)","status":"passed","title":"should work with different Node.js versions (>=14.0.0)"},{"ancestorTitles":["CLI Integration Tests","environment compatibility"],"duration":0,"failureMessages":[],"fullName":"CLI Integration Tests environment compatibility should handle different working directories","status":"passed","title":"should handle different working directories"},{"ancestorTitles":["CLI Integration Tests","error scenarios"],"duration":1016,"failureMessages":[],"fullName":"CLI Integration Tests error scenarios should handle non-git directories gracefully","status":"passed","title":"should handle non-git directories gracefully"},{"ancestorTitles":["CLI Integration Tests","error scenarios"],"duration":0,"failureMessages":[],"fullName":"CLI Integration Tests error scenarios should handle invalid arguments gracefully","status":"passed","title":"should handle invalid arguments gracefully"}]}],"config":{"bail":0,"changedFilesWithAncestor":false,"ci":false,"collectCoverage":false,"collectCoverageFrom":["src/**/*.js","!src/**/*.test.js"],"coverageDirectory":"C:\\Entwicklung\\mlgc\\coverage","coverageProvider":"babel","coverageReporters":["text","lcov","html","json","text-summary"],"detectLeaks":false,"detectOpenHandles":false,"errorOnDeprecated":true,"expand":false,"findRelatedTests":false,"forceExit":false,"json":false,"lastCommit":false,"listTests":false,"logHeapUsage":false,"maxConcurrency":5,"maxWorkers":19,"noStackTrace":false,"nonFlagArgs":[],"notify":false,"notifyMode":"failure-change","onlyChanged":false,"onlyFailures":false,"openHandlesTimeout":1000,"passWithNoTests":false,"projects":[],"reporters":[["default",{}],["C:\\Entwicklung\\mlgc\\node_modules\\jest-html-reporters\\index.js",{}]],"rootDir":"C:\\Entwicklung\\mlgc","runTestsByPath":false,"seed":367051199,"skipFilter":false,"snapshotFormat":{"escapeString":false,"printBasicPrototype":false},"testFailureExitCode":1,"testPathPattern":"","testSequencer":"C:\\Entwicklung\\mlgc\\node_modules\\@jest\\test-sequencer\\build\\index.js","testTimeout":10000,"updateSnapshot":"new","useStderr":false,"verbose":true,"watch":false,"watchAll":false,"watchman":true,"workerThreads":false},"endTime":1755824618670,"_reporterOptions":{"publicPath":"C:\\Entwicklung\\mlgc","filename":"jest_html_reporters.html","expand":false,"pageTitle":"","hideIcon":false,"testCommand":"","openReport":false,"failureMessageOnly":0,"enableMergeData":false,"dataMergeLevel":1,"inlineSource":false,"urlForTestFiles":"","darkTheme":false,"includeConsoleLog":false,"stripSkippedTest":false},"logInfoMapping":{},"attachInfos":{}})